# Generated by Django 5.2 on 2025-07-08 08:34

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CalcGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['group_id'],
            },
        ),
        migrations.CreateModel(
            name='ControlGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['group_id'],
            },
        ),
        migrations.CreateModel(
            name='ControlLogic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text='제어 로직 이름', max_length=100, null=True)),
                ('use_method', models.CharField(blank=True, choices=[('hysteresis_control', 'hysteresis_control'), ('pid_control', 'pid_control'), ('proportional_control', 'proportional_control'), ('conditional_control', 'conditional_control'), ('schedule_based_control', 'schedule_based_control'), ('sensor_feedback_control', 'sensor_feedback_control'), ('ai_ml_based_control', 'ai_ml_based_control'), ('set_deviation_control', 'set_deviation_control'), ('set_threshold_control', 'set_threshold_control'), ('set_simple_conditional_control', 'set_simple_conditional_control'), ('set_time_based_control', 'set_time_based_control'), ('set_cycle_control', 'set_cycle_control'), ('set_on_off_timer_control', 'set_on_off_timer_control')], max_length=40, null=True)),
                ('method_description', models.CharField(blank=True, max_length=200, null=True)),
                ('method_args_desc', models.JSONField(blank=True, default=dict, help_text='메서드 인자 설명', null=True)),
                ('method_result', models.JSONField(blank=True, default=dict, help_text='메서드 결과 설명', null=True)),
                ('method_args_type', models.JSONField(blank=True, default=dict, help_text='메서드 인자 타입', null=True)),
                ('method_result_type', models.CharField(blank=True, help_text='메서드 반환 타입', max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DataName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('ctype', models.CharField(blank=True, max_length=20)),
                ('dtype', models.CharField(blank=True, max_length=10)),
                ('unit', models.CharField(blank=True, max_length=20)),
                ('attributes', models.CharField(blank=True, choices=[('status', 'Status'), ('upper', 'Upper'), ('lower', 'Lower'), ('reference', 'Reference'), ('difference', 'Difference'), ('calculation', 'Calculation'), ('command', 'Command')], max_length=20, null=True)),
                ('use_method', models.CharField(blank=True, choices=[('dew_point', 'dew_point'), ('condensation_risk', 'condensation_risk'), ('calculate_ECp', 'calculate_ECp'), ('calculate_AWC', 'calculate_AWC'), ('calculate_SWSI', 'calculate_SWSI'), ('calculate_stress_time_ratio', 'calculate_stress_time_ratio'), ('hysteresis_control', 'hysteresis_control'), ('pid_control', 'pid_control'), ('proportional_control', 'proportional_control'), ('conditional_control', 'conditional_control'), ('schedule_based_control', 'schedule_based_control'), ('sensor_feedback_control', 'sensor_feedback_control'), ('ai_ml_based_control', 'ai_ml_based_control'), ('set_deviation_control', 'set_deviation_control'), ('set_threshold_control', 'set_threshold_control'), ('set_simple_conditional_control', 'set_simple_conditional_control'), ('set_time_based_control', 'set_time_based_control'), ('set_cycle_control', 'set_cycle_control'), ('set_on_off_timer_control', 'set_on_off_timer_control')], max_length=40, null=True)),
                ('method_description', models.CharField(blank=True, max_length=200, null=True)),
                ('method_args_desc', models.JSONField(blank=True, default=dict, help_text='계산 메서드 인자 설명', null=True)),
                ('method_result', models.JSONField(blank=True, default=dict, help_text='계산 메서드 인자 설명', null=True)),
                ('method_args_type', models.JSONField(blank=True, default=dict, help_text='계산 메서드 인자 타입', null=True)),
                ('method_result_type', models.CharField(blank=True, help_text='계산 메서드 반환 타입', max_length=100, null=True)),
                ('icon', models.CharField(blank=True, help_text='아이콘 클래스 (문자열)', max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DeviceCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('address', models.TextField(blank=True)),
                ('contact_number', models.CharField(blank=True, max_length=20)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('website', models.URLField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserManual',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='메뉴얼 제목', max_length=200)),
                ('file', models.FileField(help_text='사용자 취급 메뉴얼 파일', upload_to='user_manuals/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to.', related_name='corecode_user_set', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='corecode_user_set', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ControlValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=30, verbose_name='명령상태')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일시')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='업데이트 일시')),
                ('command_name', models.CharField(max_length=100, verbose_name='명령이름')),
                ('target', models.CharField(max_length=100, verbose_name='타겟')),
                ('data_type', models.CharField(max_length=30, verbose_name='데이터타입')),
                ('value', models.JSONField(verbose_name='명령값')),
                ('control_at', models.DateTimeField(blank=True, null=True, verbose_name='제어 일시')),
                ('env_data', models.JSONField(blank=True, null=True, verbose_name='제어환경데이터')),
                ('response', models.JSONField(blank=True, null=True, verbose_name='명령 Response')),
                ('control_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='control_values', to=settings.AUTH_USER_MODEL, verbose_name='제어 사용자')),
            ],
        ),
        migrations.CreateModel(
            name='ControlValueHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(max_length=30, verbose_name='명령상태')),
                ('command_name', models.CharField(max_length=100, verbose_name='명령이름')),
                ('target', models.CharField(max_length=100, verbose_name='타겟')),
                ('data_type', models.CharField(max_length=30, verbose_name='데이터타입')),
                ('value', models.JSONField(verbose_name='명령값')),
                ('control_at', models.DateTimeField(blank=True, null=True, verbose_name='제어 일시')),
                ('env_data', models.JSONField(blank=True, null=True, verbose_name='제어환경데이터')),
                ('response', models.JSONField(blank=True, null=True, verbose_name='명령 Response')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='생성일시')),
                ('control_value', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='histories', to='corecode.controlvalue', verbose_name='제어값')),
            ],
        ),
        migrations.CreateModel(
            name='ControlVariable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_type', models.CharField(blank=True, max_length=20)),
                ('args', models.JSONField(blank=True, default=list, help_text='함수 인자값을 순서대로 저장 (리스트)')),
                ('attributes', models.JSONField(blank=True, default=list, help_text="['감시','제어','기록','경보'] 중 복수 선택")),
                ('applied_logic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='corecode.controllogic')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='control_variables_in_group', to='corecode.controlgroup')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='as_control_variable', to='corecode.dataname')),
            ],
        ),
        migrations.CreateModel(
            name='CalcVariable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_type', models.CharField(blank=True, max_length=20)),
                ('use_method', models.CharField(blank=True, choices=[('dew_point', 'dew_point'), ('condensation_risk', 'condensation_risk'), ('calculate_ECp', 'calculate_ECp'), ('calculate_AWC', 'calculate_AWC'), ('calculate_SWSI', 'calculate_SWSI'), ('calculate_stress_time_ratio', 'calculate_stress_time_ratio')], max_length=40, null=True)),
                ('args', models.JSONField(blank=True, default=list, help_text='함수 인자값을 순서대로 저장 (리스트)')),
                ('attributes', models.JSONField(blank=True, default=list, help_text="['감시','제어','기록','경보'] 중 복수 선택")),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='calc_variables_in_group', to='corecode.calcgroup')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='as_calc_variable', to='corecode.dataname')),
            ],
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('device_code', models.CharField(blank=True, max_length=20, null=True)),
                ('device_name_korean', models.CharField(blank=True, help_text='단체표준 장비명(국문)', max_length=200, null=True)),
                ('device_name_english', models.CharField(blank=True, help_text='Standardized device name (English)', max_length=200, null=True)),
                ('device_type', models.CharField(choices=[('sensor', 'Sensor'), ('actuator', 'Actuator'), ('controller', 'Controller'), ('other', 'Other')], max_length=50)),
                ('icon', models.ImageField(blank=True, null=True, upload_to='device_icons/')),
                ('alert_icon', models.ImageField(blank=True, null=True, upload_to='device_icons/alert/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('connector', models.CharField(blank=True, choices=[('LSIS-socket', 'LSIS-socket')], max_length=50, null=True)),
                ('catalog', models.FileField(blank=True, help_text='장비 카탈로그 파일', null=True, upload_to='device_catalogs/')),
                ('manufacturer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='devices', to='corecode.devicecompany')),
                ('user_manuals', models.ManyToManyField(blank=True, help_text='사용자 취급 메뉴얼 파일들', related_name='devices', to='corecode.usermanual')),
            ],
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='projects', to='corecode.device')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectVersion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('note', models.TextField(blank=True)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='versions', to='corecode.project')),
            ],
            options={
                'ordering': ['-updated_at'],
                'unique_together': {('project', 'version')},
            },
        ),
        migrations.CreateModel(
            name='MemoryGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('start_device', models.CharField(choices=[('D', 'D'), ('M', 'M'), ('R', 'R')], max_length=2)),
                ('start_address', models.PositiveIntegerField()),
                ('size_byte', models.PositiveIntegerField()),
                ('project_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='groups', to='corecode.projectversion')),
            ],
            options={
                'ordering': ['group_id'],
                'unique_together': {('project_version', 'group_id')},
            },
        ),
        migrations.AddField(
            model_name='controlgroup',
            name='project_version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='control_groups', to='corecode.projectversion'),
        ),
        migrations.AddField(
            model_name='calcgroup',
            name='project_version',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='calc_groups', to='corecode.projectversion'),
        ),
        migrations.CreateModel(
            name='UserPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('preferences', models.JSONField(blank=True, default=dict, help_text='개인화 설정(예: 테마, 알림 등)')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='preference', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Variable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('device', models.CharField(max_length=2)),
                ('address', models.FloatField()),
                ('data_type', models.CharField(choices=[('bool', 'bool'), ('sint', 'sint'), ('usint', 'usint'), ('int', 'int'), ('uint', 'uint'), ('dint', 'dint'), ('udint', 'udint'), ('float', 'float')], max_length=10)),
                ('unit', models.CharField(choices=[('bit', 'bit'), ('byte', 'byte'), ('word', 'word'), ('dword', 'dword')], max_length=10)),
                ('scale', models.FloatField(default=1)),
                ('offset', models.PositiveIntegerField(default=0)),
                ('attributes', models.JSONField(blank=True, default=list, help_text="['감시','제어','기록','경보'] 중 복수 선택")),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variables', to='corecode.memorygroup')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='physical_variables', to='corecode.dataname')),
            ],
        ),
        migrations.AlterUniqueTogether(
            name='controlgroup',
            unique_together={('project_version', 'group_id')},
        ),
        migrations.AlterUniqueTogether(
            name='calcgroup',
            unique_together={('project_version', 'group_id')},
        ),
    ]
