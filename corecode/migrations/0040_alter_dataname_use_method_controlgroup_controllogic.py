# Generated by Django 5.2 on 2025-06-01 05:57

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('corecode', '0039_remove_calcvariable_return_from'),
    ]

    operations = [
        migrations.AlterField(
            model_name='dataname',
            name='use_method',
            field=models.CharField(blank=True, choices=[('dew_point', 'dew_point'), ('condensation_risk', 'condensation_risk'), ('calculate_ECp', 'calculate_ECp'), ('calculate_AWC', 'calculate_AWC'), ('calculate_SWSI', 'calculate_SWSI'), ('calculate_stress_time_ratio', 'calculate_stress_time_ratio'), ('hysteresis_control', 'hysteresis_control'), ('pid_control', 'pid_control'), ('proportional_control', 'proportional_control'), ('conditional_control', 'conditional_control'), ('schedule_based_control', 'schedule_based_control'), ('sensor_feedback_control', 'sensor_feedback_control'), ('ai_ml_based_control', 'ai_ml_based_control'), ('set_deviation_control', 'set_deviation_control'), ('set_threshold_control', 'set_threshold_control'), ('set_simple_conditional_control', 'set_simple_conditional_control'), ('set_time_based_control', 'set_time_based_control'), ('set_cycle_control', 'set_cycle_control'), ('set_on_off_timer_control', 'set_on_off_timer_control')], max_length=40, null=True),
        ),
        migrations.CreateModel(
            name='ControlGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('group_id', models.PositiveIntegerField()),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('project_version', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='control_groups', to='corecode.projectversion')),
            ],
            options={
                'ordering': ['group_id'],
                'unique_together': {('project_version', 'group_id')},
            },
        ),
        migrations.CreateModel(
            name='ControlLogic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_type', models.CharField(blank=True, max_length=20)),
                ('use_method', models.CharField(blank=True, choices=[('hysteresis_control', 'hysteresis_control'), ('pid_control', 'pid_control'), ('proportional_control', 'proportional_control'), ('conditional_control', 'conditional_control'), ('schedule_based_control', 'schedule_based_control'), ('sensor_feedback_control', 'sensor_feedback_control'), ('ai_ml_based_control', 'ai_ml_based_control'), ('set_deviation_control', 'set_deviation_control'), ('set_threshold_control', 'set_threshold_control'), ('set_simple_conditional_control', 'set_simple_conditional_control'), ('set_time_based_control', 'set_time_based_control'), ('set_cycle_control', 'set_cycle_control'), ('set_on_off_timer_control', 'set_on_off_timer_control')], max_length=40, null=True)),
                ('args', models.JSONField(blank=True, default=list, help_text='함수 인자값을 순서대로 저장 (리스트)')),
                ('attributes', models.JSONField(blank=True, default=list, help_text="['감시','제어','기록','경보'] 중 복수 선택")),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='logics', to='corecode.controlgroup')),
                ('name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='control_logics', to='corecode.dataname')),
            ],
        ),
    ]
